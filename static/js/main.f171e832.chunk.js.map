{"version":3,"sources":["constants/index.js","store/reducers/modal.js","store/reducers/todos.js","store/reducers/filter.js","store/root-store.js","components/Header/Header.jsx","helpers/validate.js","helpers/lengthTodoList.js","helpers/lengthTodoDone.js","API/index.js","store/action/todo.js","helpers/randomNumId.js","store/action/modal.js","store/action/filter.js","components/Header/headerContainer.js","components/Modal/Modal.jsx","components/Snackbar/snackbarContainer.js","components/Snackbar/Snackbar.jsx","components/TodoItem/TodoItemEdit.jsx","components/TodoItem/TodoItemDefault.jsx","components/TodoItem/TodoItem.jsx","components/TodoItem/todoItemContainer.js","components/Loader/Loader.jsx","components/TodoList/TodoList.jsx","components/TodoList/todoListContainer.js","components/Filter/Filter.jsx","components/Filter/filterContainer.js","components/TodoGrid/TodoGrid.jsx","components/TodoGrid/todoGridContainer.js","MuiTheme.js","serviceWorker.js","index.js","App.js"],"names":["constants","FETCH_TODO_FAILURE","FETCH_TODO_REQUEST","FETCH_TODO_SUCCESS","ADD_TODO","DELETE_TODO","DONE_TODO","CHANGE_TODO","SHOW_MODAL","TOGGLE_ALERT","SET_FILTER","FILTERING_ALL","FILTERING_COMPLETED","initialState","dialog","alert","fetching","load","todoList","filteringTodo","types","logger","createLogger","todoApp","combineReducers","undoable","state","arguments","length","undefined","action","type","Object","objectSpread","error","toConsumableArray","concat","newItem","filter","item","id","map","completed","title","text","modal","open","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","withStyles","margin","marginLeft","props","showModal","classes","react_default","a","createElement","Grid_default","container","justify","md","AppBar_default","position","color","Toolbar_default","Typography_default","variant","IconButton_default","className","aria-label","onClick","AddCircle_default","fontSize","Validate","WrappedComponent","_React$Component","ValidateHOC","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","valid","value","_handleChange","e","target","setState","_updateState","bool","inherits","createClass","key","_this$state","assign","validate","validateValue","updateState","handleValid","React","Component","lengthTodoList","present","lengthTodoDone","API_PATH","getTodoList","dispatch","isLoadTodoList","setTimeout","fetch","then","response","ok","Error","statusText","json","data","catch","console","log","loadTodoError","addTodo","userId","min_value","max_value","Math","random","deleteTodo","doneTodo","changeTodo","toggleAlert","connect","bindActionCreators","HeaderComponent","Modal","theme","modalClass","minWidth","myVar","size","handleClose","Dialog_default","onClose","aria-labelledby","DialogTitle_default","children","Snackbar","_ref","openAlert","undo","ActionCreators","content","Button_default","Snackbar_default","anchorOrigin","vertical","horizontal","event","reason","autoHideDuration","ContentProps","aria-describedby","TransitionComponent","Fade","message","TodoItemEdit","inputStyle","marginRight","activeClass","handleChange","handleClick","clickHandlers","ListItem_default","divider","Checkbox_default","tabIndex","disableRipple","disabled","checked","Input_default","onChange","defaultValue","fullWidth","inputProps","ListItemSecondaryAction_default","editDone","Done_default","closeEdit","Close_default","TodoItemDefault","button","toggleDone","ListItemText_default","primary","openEdit","Edit_default","delete","Delete_default","TodoItemComponent","editTodo","_toggleDone","_openEdit","_ref2","_closeEdit","_editDone","_ref3","_this$props","_delete","_ref4","clickHandlerMap","_handleClick","_this$props2","doneItem","Fragment","TodoItemDefault_TodoItemDefault","TodoItem","background","palette","dark","textDecoration","textDecorationColor","common","black","paper","Loader","row","display","progress","spacing","unit","CircularProgress_default","TodoList","_Component","todos","loading","List_default","react_transition_group","timeout","classNames","todoItemContainer_TodoItem","todo","Filter","root","width","marginTop","badge","padding","active","grey","done","renderLabelAll","Badge_default","badgeContent","ViewList_default","renderLabelDone","DoneAllOutlined_default","BottomNavigation_default","showLabels","BottomNavigationAction_default","selected","label","FilterComponent","TodoGrid","inputStyles","modalOpen","_closeModal","snackbarContainer_Snackbar","filterContainer_Filter","todoListContainer_TodoList","DialogContent_default","TextField_default","autoFocus","DialogActions_default","TodoGridComponent","createMuiTheme","typography","useNextVariants","600","500","400","300","200","100","50","16","10","animation","fade","fade-enter","opacity","fade-enter-active","transition","fade-exit","fade-exit-active","MuiTheme","styles","Boolean","window","location","hostname","match","ReactDOM","render","es","MuiTheme_MuiTheme","headerContainer_Header","todoGridContainer_TodoGrid","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f171e832.chunk.js","sourcesContent":["const FETCH_TODO_REQUEST = 'FETCH_TODO_REQUEST'\r\nconst FETCH_TODO_SUCCESS = 'FETCH_TODO_SUCCESS'\r\nconst FETCH_TODO_FAILURE = 'FETCH_TODO_FAILURE'\r\nconst ADD_TODO = 'ADD_TODO'\r\nconst DELETE_TODO = 'DELETE_TODO'\r\nconst DONE_TODO = 'DONE_TODO'\r\nconst CHANGE_TODO = 'CHANGE_TODO'\r\nconst SHOW_MODAL = 'SHOW_MODAL'\r\nconst TOGGLE_ALERT = 'TOGGLE_ALERT'\r\nconst SET_FILTER = 'SET_FILTER'\r\nconst FILTERING_ALL = 'FILTERING_ALL'\r\nconst FILTERING_COMPLETED = 'FILTERING_COMPLETED'\r\n\r\nexport default {\r\n  FETCH_TODO_FAILURE,\r\n  FETCH_TODO_REQUEST,\r\n  FETCH_TODO_SUCCESS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  DONE_TODO,\r\n  CHANGE_TODO,\r\n  SHOW_MODAL,\r\n  TOGGLE_ALERT,\r\n  SET_FILTER,\r\n  FILTERING_ALL,\r\n  FILTERING_COMPLETED\r\n}\r\n","import types from 'Constants'\r\n\r\nconst initialState = {\r\n  dialog: false,\r\n  alert: false\r\n}\r\n\r\nexport const modal = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case types.SHOW_MODAL :\r\n      return {\r\n        ...state,\r\n        dialog: action.open,\r\n      }\r\n\r\n    case types.DELETE_TODO :\r\n      return {\r\n        ...state,\r\n        alert: true,\r\n      }\r\n\r\n    case types.TOGGLE_ALERT :\r\n      return {\r\n        ...state,\r\n        alert: action.open,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import types from 'Constants'\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  load: false,\r\n  todoList: [],\r\n}\r\n\r\nexport const todos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case types.FETCH_TODO_REQUEST :\r\n      return {\r\n        ...state,\r\n        fetching: action.fetching,\r\n      }\r\n\r\n    case types.FETCH_TODO_SUCCESS :\r\n      return {\r\n        ...state,\r\n        load: true,\r\n        todoList: action.todoList,\r\n      }\r\n\r\n    case types.FETCH_TODO_FAILURE :\r\n      return {\r\n        ...state,\r\n        load: false,\r\n        error: action.error,\r\n      }\r\n\r\n    case types.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: [...state.todoList, action.newItem]\r\n      }\r\n\r\n    case types.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.filter(item => item.id !== action.id)\r\n      }\r\n\r\n    case types.DONE_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.map(item =>\r\n          item.id === action.id ? {...item, completed: !item.completed} : item)\r\n      }\r\n\r\n    case types.CHANGE_TODO:\r\n\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.map(item =>\r\n          item.id === action.id ? {...item, title: action.text} : item)\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import types from 'Constants'\r\n\r\nconst initialState = {\r\n  filteringTodo: types.FILTERING_ALL\r\n}\r\n\r\nexport const filter = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_FILTER :\r\n      return {\r\n        filteringTodo: action.filter\r\n      }\r\n    default :\r\n      return state\r\n  }\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport undoable, {includeAction, groupByActionTypes} from 'redux-undo'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createLogger } from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { todos, modal, filter } from './reducers'\r\n// import types from '../constants'\r\n// import {deleteTodo} from './action'\r\n\r\nconst logger = createLogger()\r\n\r\nconst undoConfig = {\r\n  // filter: includeAction([types.DELETE_TODO, types.FETCH_TODO_SUCCESS]),\r\n//   limit: 1,\r\n  // debug: true,\r\n  // ignoreInitialState: true,\r\n}\r\n\r\nconst todoApp = combineReducers({\r\n  todoApp: undoable(todos, undoConfig),\r\n  modal,\r\n  filter\r\n})\r\n\r\nexport const store = createStore(\r\n  todoApp,\r\n  composeWithDevTools(\r\n    applyMiddleware(\r\n      thunk,\r\n      logger\r\n    ),\r\n  ),\r\n)\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Add from '@material-ui/icons/AddCircle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nconst styles = {\r\n  margin: {\r\n    marginLeft: 'auto',\r\n  }\r\n};\r\n\r\nconst HeaderComponent = (props) => {\r\n  const {showModal, classes} = props\r\n\r\n  const handleClick = () => showModal(true)\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item md={6}>\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n          <Toolbar>\r\n            <Typography variant=\"h4\" color={'textPrimary'}>\r\n              TODO App\r\n            </Typography>\r\n\r\n            <IconButton color=\"primary\"\r\n                        className={classes.margin}\r\n                        aria-label=\"Add\"\r\n                        onClick={handleClick}\r\n            >\r\n              <Add fontSize=\"large\"\r\n              />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nHeaderComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  showModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport const Header = withStyles(styles)(HeaderComponent)\r\n","import React from 'react'\r\n\r\nexport const Validate = (WrappedComponent) => {\r\n  class ValidateHOC extends React.Component {\r\n    state = {\r\n      valid: false,\r\n      value: '',\r\n    }\r\n\r\n    _handleChange = (e) => {\r\n      const target = e.target.value\r\n      this.setState({\r\n        value: target,\r\n        valid: !!target,\r\n      })\r\n    }\r\n\r\n    _updateState = (title, bool) => {\r\n      this.setState({\r\n        value: title,\r\n        valid: bool,\r\n      })\r\n    }\r\n\r\n    render () {\r\n      const {valid, value} = this.state\r\n      return <WrappedComponent {...this.props}\r\n                               validate={valid}\r\n                               validateValue={value}\r\n                               updateState={this._updateState}\r\n                               handleValid={this._handleChange}/>\r\n    }\r\n  }\r\n\r\n  return ValidateHOC\r\n}\r\n","export const lengthTodoList = (state) => state.todoApp.present.todoList.length\r\n","export const lengthTodoDone = (state) => {\r\n  let todoDone = state.todoApp.present.todoList.filter(item => item.completed)\r\n  return todoDone.length\r\n}\r\n","export const API_PATH = 'https://jsonplaceholder.typicode.com/todos?userId=1'\r\n","import types from 'Constants'\r\nimport { generateRandomNumber } from 'Helpers'\r\nimport { API_PATH } from 'API'\r\n\r\nexport function getTodoList () {\r\n  return (dispatch) => {\r\n    dispatch(isLoadTodoList(true))\r\n\r\n    setTimeout(() => { //dev\r\n      fetch(API_PATH).then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        dispatch(isLoadTodoList(false))\r\n        return response\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(loadTodoData(response)))\r\n        .catch(error => dispatch(loadTodoError(true, error)))\r\n    }, 1000)\r\n\r\n  }\r\n}\r\n\r\nexport function loadTodoError (bool, error) {\r\n  console.log(error)\r\n  return {\r\n    type: types.FETCH_TODO_FAILURE,\r\n    error: bool,\r\n  }\r\n}\r\n\r\nexport function loadTodoData (data) {\r\n  return {\r\n    type: types.FETCH_TODO_SUCCESS,\r\n    todoList: data,\r\n  }\r\n}\r\n\r\nexport function isLoadTodoList (bool) {\r\n  return {\r\n    type: types.FETCH_TODO_REQUEST,\r\n    fetching: bool,\r\n  }\r\n}\r\n\r\n\r\nexport function addTodo (text) {\r\n  return {\r\n    type: types.ADD_TODO,\r\n    newItem: {\r\n      userId: 1,\r\n      id: generateRandomNumber(10, 100),\r\n      title: text,\r\n      completed: false\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteTodo (id) {\r\n  return {\r\n    type: types.DELETE_TODO,\r\n    id\r\n  }\r\n}\r\n\r\nexport function doneTodo (id) {\r\n  return {\r\n    type: types.DONE_TODO,\r\n    id,\r\n  }\r\n}\r\n\r\nexport function changeTodo (id, text) {\r\n  return {\r\n    type: types.CHANGE_TODO,\r\n    text,\r\n    id,\r\n  }\r\n}\r\n\r\n","export function generateRandomNumber(min_value , max_value)\r\n{\r\n  return Math.random() * (max_value-min_value) + min_value ;\r\n}\r\n","import types from 'Constants'\r\n\r\nexport function showModal (bool) {\r\n  return {\r\n    type: types.SHOW_MODAL,\r\n    open: bool\r\n  }\r\n}\r\n\r\nexport function toggleAlert (bool) {\r\n  return {\r\n    type: types.TOGGLE_ALERT,\r\n    open: bool\r\n  }\r\n}\r\n","import types from 'Constants'\r\n\r\nexport function filter (value) {\r\n  return {\r\n    type: types.SET_FILTER,\r\n    filter: value\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Header as HeaderComponent } from './Header'\r\nimport { showModal } from 'Store/action'\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    showModal: bindActionCreators(showModal, dispatch),\r\n  }\r\n}\r\n\r\nexport const Header = connect(null, mapDispatchToProps)(HeaderComponent)\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nconst style = (theme) => ({\r\n  modalClass: {\r\n    minWidth: theme.myVar.size['400'],\r\n  },\r\n})\r\n\r\nconst ModalComponent = (props) => {\r\n  const {open, handleClose, title} = props\r\n\r\n  return (\r\n    <Dialog open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\"> {title} </DialogTitle>\r\n      {props.children}\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nModalComponent.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n}\r\n\r\nexport let Modal = withStyles(style)(ModalComponent)\r\n","import { connect } from 'react-redux'\r\nimport { ActionCreators } from 'redux-undo'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Snackbar as SnackbarComponent } from './Snackbar'\r\nimport { toggleAlert } from 'Store/action'\r\n\r\nfunction mapStateToProps ({modal, todoApp}) {\r\n  // console.log(todoApp.past.length, 'length')\r\n  return {\r\n    openAlert: modal.alert,\r\n    // canPast: todoApp.past.length > 0\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    undo: () => dispatch(ActionCreators.undo()),\r\n    toggleAlert: bindActionCreators(toggleAlert, dispatch)\r\n  }\r\n}\r\n\r\nexport const Snackbar = connect(mapStateToProps, mapDispatchToProps)(SnackbarComponent)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport SnackbarUi from '@material-ui/core/Snackbar'\r\nimport Fade from '@material-ui/core/Fade'\r\n\r\nexport const Snackbar = (props) => {\r\n  const {undo, toggleAlert, openAlert} = props\r\n\r\n  const handleClick = () => {\r\n    undo()\r\n    toggleAlert(false)\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'timeout') {\r\n      toggleAlert(false)\r\n    }\r\n  }\r\n\r\n  const content = <span id=\"message-id\">Are you sure you want to delete?</span>\r\n  const action = <Button key=\"undo\"\r\n                         color=\"secondary\"\r\n                         size=\"small\"\r\n                         onClick={handleClick}> UNDO </Button>\r\n\r\n  return (\r\n    <div>\r\n      <SnackbarUi\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        open={openAlert}\r\n        onClose={handleClose}\r\n        autoHideDuration={3000}\r\n        ContentProps={{ 'aria-describedby': 'message-id' }}\r\n        TransitionComponent={Fade}\r\n        message={content}\r\n        action={[action]}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Input from '@material-ui/core/Input'\r\nimport Close from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Done from '@material-ui/icons/Done'\r\nimport { withStyles } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = (theme) => ({\r\n  inputStyle: {\r\n    marginRight: theme.myVar.size['100'],\r\n    marginLeft: theme.myVar.size['16'],\r\n  },\r\n})\r\n\r\nexport const TodoItemEditComponent = (props) => {\r\n  const {\r\n    activeClass,\r\n    handleChange,\r\n    handleClick,\r\n    clickHandlers,\r\n    validate,\r\n    classes,\r\n    item\r\n  } = props\r\n\r\n  return (\r\n    <ListItem className={activeClass} divider>\r\n      <Checkbox tabIndex={1} disableRipple disabled checked={item.completed}/>\r\n      <Input onChange={handleChange}\r\n             className={classes.inputStyle}\r\n             defaultValue={item.title}\r\n             fullWidth={true}\r\n             inputProps={{'aria-label': 'Title'}}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton aria-label=\"Open Edit\"\r\n                    onClick={handleClick(clickHandlers.editDone, item)}\r\n                    disabled={!validate}>\r\n          <Done/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Close Edit\"\r\n                    onClick={handleClick(clickHandlers.closeEdit, item)}>\r\n          <Close/>\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nTodoItemEditComponent.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    title: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  validate: PropTypes.bool.isRequired,\r\n  activeClass: PropTypes.string.isRequired,\r\n  clickHandlers: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const TodoItemEdit = withStyles(style)(TodoItemEditComponent)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ListItemText from '@material-ui/core/ListItemText/ListItemText'\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport Delete from '@material-ui/icons/Delete'\r\n\r\nexport const TodoItemDefault = (props) => {\r\n  const {handleClick, item, activeClass, clickHandlers} = props\r\n  return (\r\n    <ListItem className={activeClass}\r\n              button\r\n              divider\r\n              onClick={handleClick(clickHandlers.toggleDone, item)}>\r\n      <Checkbox tabIndex={1}\r\n                disableRipple\r\n                checked={item.completed}/>\r\n      <ListItemText primary={item.title}/>\r\n      <ListItemSecondaryAction>\r\n        <IconButton aria-label=\"Change\"\r\n                    onClick={handleClick(clickHandlers.openEdit, item)}>\r\n          <Edit/>\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete\"\r\n                    onClick={handleClick(clickHandlers.delete, item)}>\r\n          <Delete/>\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nTodoItemDefault.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    title: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  activeClass: PropTypes.string.isRequired,\r\n  clickHandlers: PropTypes.object.isRequired\r\n}","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { TodoItemEdit } from './TodoItemEdit'\r\nimport { TodoItemDefault } from './TodoItemDefault'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = theme => ({\r\n  doneItem: {\r\n    background: theme.palette.dark,\r\n    textDecoration: 'line-through',\r\n    textDecorationColor: theme.palette.common.black\r\n  },\r\n  item: {\r\n    background: theme.palette.background.paper,\r\n  },\r\n})\r\n\r\nclass TodoItemComponent extends Component {\r\n  state = {\r\n    editTodo: false,\r\n  }\r\n\r\n  _handleChange = (e) => this.props.handleValid(e)\r\n\r\n  _toggleDone = ({id}) => this.props.doneTodo(id)\r\n\r\n  _openEdit = ({title}) => {\r\n    this.props.updateState(title, false)\r\n    this.setState({\r\n      editTodo: true,\r\n    })\r\n  }\r\n\r\n  _closeEdit = () => {\r\n    this.props.updateState('', false)\r\n    this.setState({editTodo: false})\r\n  }\r\n\r\n  _editDone = ({id}) => {\r\n    const {changeTodo, validateValue} = this.props\r\n    changeTodo(id, validateValue)\r\n    this.setState({editTodo: false})\r\n  }\r\n\r\n  _delete = ({id}) => this.props.deleteTodo(id)\r\n\r\n  clickHandlers = {\r\n    toggleDone: 'toggleDone',\r\n    openEdit: 'openEdit',\r\n    closeEdit: 'closeEdit',\r\n    editDone: 'editDone',\r\n    delete: 'delete',\r\n  }\r\n\r\n  clickHandlerMap = {\r\n    [this.clickHandlers.toggleDone]: this._toggleDone,\r\n    [this.clickHandlers.openEdit]: this._openEdit,\r\n    [this.clickHandlers.closeEdit]: this._closeEdit,\r\n    [this.clickHandlers.editDone]: this._editDone,\r\n    [this.clickHandlers.delete]: this._delete,\r\n  }\r\n\r\n  _handleClick = (type, item) => () => this.clickHandlerMap[type](item)\r\n\r\n  render () {\r\n    const {item, classes, validate} = this.props\r\n    const {editTodo} = this.state\r\n    const activeClass = item.completed ? classes.doneItem : classes.item\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          editTodo ?\r\n            <TodoItemEdit handleChange={this._handleChange}\r\n                          handleClick={this._handleClick}\r\n                          clickHandlers={this.clickHandlers}\r\n                          item={item}\r\n                          validate={validate}\r\n                          activeClass={activeClass}\r\n            /> :\r\n            <TodoItemDefault handleClick={this._handleClick}\r\n                             clickHandlers={this.clickHandlers}\r\n                             item={item}\r\n                             activeClass={activeClass}\r\n            />\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nTodoItemComponent.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    title: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  updateState: PropTypes.func.isRequired,\r\n  doneTodo: PropTypes.func.isRequired,\r\n  handleValid: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  changeTodo: PropTypes.func.isRequired,\r\n  validateValue: PropTypes.string.isRequired,\r\n  validate: PropTypes.bool.isRequired,\r\n  classes: PropTypes.object\r\n}\r\n\r\nexport const TodoItem = withStyles(style)(TodoItemComponent)\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { TodoItem as TodoItemComponent } from './TodoItem'\r\nimport { Validate } from 'Helpers'\r\nimport {\r\n  changeTodo,\r\n  deleteTodo,\r\n  doneTodo,\r\n} from 'Store/action'\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    doneTodo: bindActionCreators(doneTodo, dispatch),\r\n    changeTodo: bindActionCreators(changeTodo, dispatch),\r\n    deleteTodo: bindActionCreators(deleteTodo, dispatch),\r\n  }\r\n}\r\n\r\nexport const TodoItem = connect(null, mapDispatchToProps)(Validate(TodoItemComponent))\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst styles = theme => ({\r\n  row: {\r\n    display: 'flex'\r\n  },\r\n  progress: {\r\n    margin: `${theme.spacing.unit * 2}px auto`,\r\n  },\r\n})\r\n\r\nconst LoaderComponent = (props) => {\r\n  const {classes} = props\r\n  return (\r\n    <div className={classes.row}>\r\n      <CircularProgress className={classes.progress} color=\"secondary\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoaderComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const Loader = withStyles(styles)(LoaderComponent)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport List from '@material-ui/core/List'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { TodoItem } from 'Components/TodoItem'\r\nimport { Loader } from 'Components/Loader'\r\n\r\nexport class TodoList extends Component {\r\n\r\n  componentDidMount () { this.props.getTodoList() }\r\n\r\n  render () {\r\n    const {todos, loading} = this.props\r\n    if (loading) return <Loader/>\r\n\r\n    return (\r\n      <List>\r\n        <TransitionGroup>\r\n          {\r\n            todos.map(item => (\r\n              <CSSTransition key={item.id} timeout={300} classNames=\"fade\">\r\n                <TodoItem item={item}/>\r\n              </CSSTransition>\r\n            ))\r\n          }\r\n        </TransitionGroup>\r\n\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    title: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  getTodoList: PropTypes.func.isRequired,\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { TodoList as TodoItemComponent } from './TodoList'\r\nimport { getTodoList } from 'Store/action'\r\nimport types from 'Constants'\r\n\r\nfunction mapStateToProps ({todoApp, filter}) {\r\n\r\n  const filteredTodo =  todoApp.present.todoList.filter(todo =>\r\n    filter.filteringTodo === types.FILTERING_ALL || todo.completed)\r\n\r\n  return {\r\n    todos: filteredTodo,\r\n    loading: todoApp.present.fetching\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    getTodoList: bindActionCreators(getTodoList, dispatch),\r\n  }\r\n}\r\n\r\nexport const TodoList = connect(mapStateToProps, mapDispatchToProps)(TodoItemComponent)\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\r\nimport DoneAllOutlined from '@material-ui/icons/DoneAllOutlined'\r\nimport ViewList from '@material-ui/icons/ViewList'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport types from 'Constants'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: theme.myVar.size['300'],\r\n    marginTop: theme.myVar.size['50']\r\n  },\r\n  badge: {\r\n    padding: `0 ${theme.spacing.unit * 2}px`,\r\n    background: 'transparent'\r\n  },\r\n  active: {\r\n    background: theme.palette.grey['300']\r\n  },\r\n})\r\n\r\nconst FilterComponent = (props) => {\r\n  const {done, length, filteringTodo, filter, classes} = props\r\n\r\n  const handleChange = (event, value) => filter(value)\r\n\r\n  const renderLabelAll =\r\n    <Badge className={classes.badge} color=\"primary\" badgeContent={length}>\r\n      <ViewList/>\r\n    </Badge>\r\n\r\n  const renderLabelDone =\r\n    <Badge className={classes.badge} color=\"primary\" badgeContent={done}>\r\n      <DoneAllOutlined/>\r\n    </Badge>\r\n\r\n  return (\r\n    <Grid container justify={'center'}>\r\n      <BottomNavigation\r\n        value={filteringTodo}\r\n        onChange={handleChange}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction classes={{selected: classes.active}}\r\n                                label={renderLabelAll}\r\n                                value={types.FILTERING_ALL}\r\n        />\r\n        <BottomNavigationAction classes={{selected: classes.active}}\r\n                                label={renderLabelDone}\r\n                                value={types.FILTERING_COMPLETED}\r\n        />\r\n      </BottomNavigation>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nFilterComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  done: PropTypes.number.isRequired,\r\n  length: PropTypes.number.isRequired,\r\n  filteringTodo: PropTypes.string.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport const Filter = withStyles(styles)(FilterComponent)\r\n","import { connect } from 'react-redux'\r\nimport { Filter as FilterComponent } from './Filter'\r\nimport { lengthTodoDone, lengthTodoList } from 'Helpers'\r\nimport { bindActionCreators } from 'redux'\r\nimport { filter } from 'Store/action'\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n    done: lengthTodoDone(state),\r\n    length: lengthTodoList(state),\r\n    filteringTodo: state.filter.filteringTodo,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    filter: bindActionCreators(filter, dispatch),\r\n  }\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(\r\n  FilterComponent)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Modal } from 'Components/Modal'\r\nimport { Snackbar } from 'Components/Snackbar'\r\nimport { TodoList } from 'Components/TodoList'\r\nimport { Filter } from 'Components/Filter'\r\n\r\nconst styles = theme => ({\r\n  inputStyles: {\r\n    'width': theme.myVar.size['300'],\r\n  },\r\n})\r\n\r\nconst TodoGridComponent = (props) => {\r\n  const {\r\n    updateState,\r\n    validateValue,\r\n    handleValid,\r\n    showModal,\r\n    addTodo,\r\n    validate,\r\n    modalOpen,\r\n    classes\r\n  } = props\r\n\r\n  const _closeModal = () => {\r\n    updateState('', false)\r\n    showModal(false)\r\n  }\r\n\r\n  const _addTodo = () => {\r\n    addTodo(validateValue)\r\n    _closeModal()\r\n  }\r\n\r\n  const _handleChangeText = (e) => handleValid(e)\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar>\r\n\r\n      </Snackbar>\r\n      <Grid container justify=\"center\">\r\n        <Grid item md={6}>\r\n          <Filter/>\r\n          <TodoList/>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Modal open={modalOpen}\r\n             title={'Add new todo'}\r\n             handleClose={_closeModal}>\r\n        <DialogContent>\r\n          <TextField className={classes.inputStyles}\r\n                     autoFocus\r\n                     margin=\"dense\"\r\n                     id=\"name\"\r\n                     label=\"Todo title\"\r\n                     type=\"text\"\r\n                     onChange={_handleChangeText}\r\n                     fullWidth/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={_closeModal} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={_addTodo} disabled={!validate} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nTodoGridComponent.propTypes = {\r\n  updateState: PropTypes.func.isRequired,\r\n  validateValue: PropTypes.string.isRequired,\r\n  handleValid: PropTypes.func.isRequired,\r\n  showModal: PropTypes.func.isRequired,\r\n  addTodo: PropTypes.func.isRequired,\r\n  validate: PropTypes.bool.isRequired,\r\n  modalOpen: PropTypes.bool.isRequired,\r\n  classes: PropTypes.object\r\n}\r\n\r\nexport const TodoGrid = withStyles(styles)(TodoGridComponent)\r\n\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { TodoGrid as TodoGridComponent } from './TodoGrid'\r\nimport { Validate } from 'Helpers'\r\nimport { showModal, addTodo } from 'Store/action'\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n    modalOpen: state.modal.dialog,\r\n  }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    showModal: bindActionCreators(showModal, dispatch),\r\n    addTodo: bindActionCreators(addTodo, dispatch),\r\n  }\r\n}\r\n\r\nexport const TodoGrid = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Validate(TodoGridComponent))\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  myVar: {\r\n    size: {\r\n      600: '600px',\r\n      500: '500px',\r\n      400: '400px',\r\n      300: '300px',\r\n      200: '200px',\r\n      100: '100px',\r\n      50: '50px',\r\n      16: '16px',\r\n      10: '10px',\r\n    },\r\n    animation: {\r\n      fade: {\r\n        'fade-enter': {opacity: 0.01},\r\n        'fade-enter-active': {\r\n          opacity: 1,\r\n          transition: 'opacity 500ms ease-in'\r\n        },\r\n        'fade-exit': {opacity: 1},\r\n        'fade-exit-active': {\r\n          opacity: 0.01,\r\n          transition: 'opacity 500ms ease-in'\r\n        },\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const MuiTheme = (props) => <MuiThemeProvider theme={theme}> {props.children} </MuiThemeProvider>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'Store/root-store'\r\nimport './index.css'\r\nimport {App} from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import React from 'react'\r\nimport { Header } from 'Components/Header'\r\nimport { TodoGrid } from 'Components/TodoGrid'\r\nimport { MuiTheme } from './MuiTheme'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <MuiTheme>\r\n      <div className=\"app\">\r\n        <Header/>\r\n        <TodoGrid/>\r\n      </div>\r\n    </MuiTheme>\r\n  )\r\n}\r\n"],"sourceRoot":""}